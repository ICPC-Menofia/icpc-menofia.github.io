name: Manual PR Deploy on Comment

on:
  issue_comment:
    types: [created]

permissions:
  contents: write
  pages: write
  id-token: write
  pull-requests: write
  issues: write

jobs:
  check-comment:
    if: github.event.issue.pull_request && contains(github.event.comment.body, 'GitHub generate site')
    runs-on: ubuntu-latest
    
    steps:
    - name: Get PR information
      id: pr-info
      uses: actions/github-script@v7
      with:
        script: |
          const { data: pr } = await github.rest.pulls.get({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.issue.number
          });
          
          core.setOutput('pr_number', pr.number);
          core.setOutput('pr_head_sha', pr.head.sha);
          core.setOutput('pr_head_ref', pr.head.ref);
          core.setOutput('pr_title', pr.title);
          core.setOutput('pr_url', pr.html_url);
          
          console.log(`PR #${pr.number}: ${pr.title}`);
          console.log(`Head SHA: ${pr.head.sha}`);
          console.log(`Head ref: ${pr.head.ref}`);
    
    - name: React to comment
      uses: actions/github-script@v7
      with:
        script: |
          await github.rest.reactions.createForIssueComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            comment_id: context.payload.comment.id,
            content: 'rocket'
          });
    
    - name: Post initial response
      uses: actions/github-script@v7
      with:
        script: |
          await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            body: `## Manual PR Preview Generation Started
            
            **Generating preview for PR #${{ steps.pr-info.outputs.pr_number }}**
            
            **Request by:** @${{ github.event.comment.user.login }}
            **Commit:** \`${{ steps.pr-info.outputs.pr_head_sha }}\`
            **Branch:** \`${{ steps.pr-info.outputs.pr_head_ref }}\`
            
            **Status:** Building site... ‚è≥
            
            [View workflow run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
            
            _This comment will be updated when the preview is ready._`
          });
    
    outputs:
      pr_number: ${{ steps.pr-info.outputs.pr_number }}
      pr_head_sha: ${{ steps.pr-info.outputs.pr_head_sha }}
      pr_head_ref: ${{ steps.pr-info.outputs.pr_head_ref }}
      pr_title: ${{ steps.pr-info.outputs.pr_title }}
      pr_url: ${{ steps.pr-info.outputs.pr_url }}

  deploy-preview:
    needs: check-comment
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout PR branch
      uses: actions/checkout@v4
      with:
        ref: ${{ needs.check-comment.outputs.pr_head_sha }}
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Configure MkDocs for preview
      run: |
        # Create a temporary mkdocs config for preview
        cp mkdocs.yml mkdocs-preview.yml
        
        # Update or add site_url for PR preview
        if grep -q "^site_url:" mkdocs-preview.yml; then
          sed -i "s|^site_url:.*|site_url: https://icpc-menofia.github.io/menofia-roadmap/pr-${{ needs.check-comment.outputs.pr_number }}/|g" mkdocs-preview.yml
        else
          echo "site_url: https://icpc-menofia.github.io/menofia-roadmap/pr-${{ needs.check-comment.outputs.pr_number }}/" >> mkdocs-preview.yml
        fi
        
        # Ensure use_directory_urls is set
        if ! grep -q "use_directory_urls:" mkdocs-preview.yml; then
          echo "use_directory_urls: true" >> mkdocs-preview.yml
        fi
        
        echo "Preview configuration for manual PR #${{ needs.check-comment.outputs.pr_number }}:"
        echo "---"
        cat mkdocs-preview.yml
        echo "---"
    
    - name: Build site
      run: |
        echo "Building site for manual PR #${{ needs.check-comment.outputs.pr_number }}"
        mkdocs build --config-file mkdocs-preview.yml --site-dir site-preview
        
        # Add PR info to the site
        echo "<div style='background: #e1f5fe; border: 1px solid #29b6f6; padding: 10px; margin: 10px 0; border-radius: 5px;'>" > pr-banner.html
        echo "<strong>Manual PR Preview #${{ needs.check-comment.outputs.pr_number }}</strong><br>" >> pr-banner.html
        echo "Generated by: @${{ github.event.comment.user.login }}<br>" >> pr-banner.html
        echo "From: <a href='${{ needs.check-comment.outputs.pr_url }}'>Pull Request #${{ needs.check-comment.outputs.pr_number }}</a><br>" >> pr-banner.html
        echo "Commit: <code>${{ needs.check-comment.outputs.pr_head_sha }}</code><br>" >> pr-banner.html
        echo "<small>Generated: $(date -u +'%Y-%m-%d %H:%M:%S UTC')</small>" >> pr-banner.html
        echo "</div>" >> pr-banner.html
        
        # Insert banner into index.html
        if [ -f "site-preview/index.html" ]; then
          sed -i '/<body[^>]*>/r pr-banner.html' site-preview/index.html
        fi
        
        echo "Site built successfully"
        echo "Site directory contents:"
        ls -la site-preview/
        echo "Index file size: $(wc -c < site-preview/index.html) bytes"
    
    - name: Checkout gh-pages branch
      uses: actions/checkout@v4
      with:
        ref: gh-pages
        path: gh-pages-repo
    
    - name: Deploy to GitHub Pages
      run: |
        # Copy built site to PR directory
        mkdir -p gh-pages-repo/pr-${{ needs.check-comment.outputs.pr_number }}
        cp -r site-preview/* gh-pages-repo/pr-${{ needs.check-comment.outputs.pr_number }}/
        
        # Configure git
        cd gh-pages-repo
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action Bot"
        
        # Add and commit changes
        git add pr-${{ needs.check-comment.outputs.pr_number }}
        git commit -m "Manual deploy PR #${{ needs.check-comment.outputs.pr_number }} preview (requested by @${{ github.event.comment.user.login }})" || echo "No changes to commit"
        
        # Push changes
        git push origin gh-pages
    
    - name: Verify deployment
      run: |
        echo "Manual deployment completed for PR #${{ needs.check-comment.outputs.pr_number }}"
        echo "Preview URL: https://icpc-menofia.github.io/menofia-roadmap/pr-${{ needs.check-comment.outputs.pr_number }}/"
        echo "Files deployed:"
        ls -la gh-pages-repo/pr-${{ needs.check-comment.outputs.pr_number }}/
    
    - name: Find initial comment
      id: find-comment
      uses: actions/github-script@v7
      with:
        script: |
          const comments = await github.rest.issues.listComments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number
          });
          
          const botComment = comments.data.find(comment => 
            comment.user.type === 'Bot' && 
            comment.body.includes('Manual PR Preview Generation Started')
          );
          
          if (botComment) {
            core.setOutput('comment_id', botComment.id);
            return botComment.id;
          }
          return null;
    
    - name: Update response with success
      if: steps.find-comment.outputs.comment_id
      uses: actions/github-script@v7
      with:
        script: |
          await github.rest.issues.updateComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            comment_id: ${{ steps.find-comment.outputs.comment_id }},
            body: `## Manual PR Preview Generation Complete ‚úÖ
            
            **Preview successfully generated for PR #${{ needs.check-comment.outputs.pr_number }}**
            
            **Requested by:** @${{ github.event.comment.user.login }}
            **Commit:** \`${{ needs.check-comment.outputs.pr_head_sha }}\`
            **Branch:** \`${{ needs.check-comment.outputs.pr_head_ref }}\`
            **Generated:** $(date -u +'%Y-%m-%d %H:%M:%S UTC')
            
            ---
            
            ### üîó Preview Links
            
            **üìñ Preview Site:** https://icpc-menofia.github.io/menofia-roadmap/pr-${{ needs.check-comment.outputs.pr_number }}/
            
            **‚ö° Quick Access:**
            - [Home Page](https://icpc-menofia.github.io/menofia-roadmap/pr-${{ needs.check-comment.outputs.pr_number }}/)
            - [Community](https://icpc-menofia.github.io/menofia-roadmap/pr-${{ needs.check-comment.outputs.pr_number }}/community/)
            - [Training](https://icpc-menofia.github.io/menofia-roadmap/pr-${{ needs.check-comment.outputs.pr_number }}/training/)
            - [Resources](https://icpc-menofia.github.io/menofia-roadmap/pr-${{ needs.check-comment.outputs.pr_number }}/resources/)
            - [News](https://icpc-menofia.github.io/menofia-roadmap/pr-${{ needs.check-comment.outputs.pr_number }}/news/)
            
            ---
            
            ### üìã Details
            
            **üîß Build Info:**
            - **Workflow:** [Manual PR Deploy](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
            - **PR Title:** ${{ needs.check-comment.outputs.pr_title }}
            - **Deploy Path:** \`pr-${{ needs.check-comment.outputs.pr_number }}/\`
            
            **üìù How to use:**
            - Review changes in the preview
            - Test functionality and design
            - Check mobile responsiveness
            - Verify all links work correctly
            
            > **Note:** Preview updates automatically when PR commits change, or you can request a new manual build with "GitHub generate site"
            
            **‚è∞ GitHub Pages update time:** 1-10 minutes (may take time to be accessible)`
          });
    
    - name: Create new success comment if update failed
      if: steps.find-comment.outputs.comment_id == ''
      uses: actions/github-script@v7
      with:
        script: |
          await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            body: `## Manual PR Preview Generated ‚úÖ
            
            **Preview URL:** https://icpc-menofia.github.io/menofia-roadmap/pr-${{ needs.check-comment.outputs.pr_number }}/
            
            Requested by @${{ github.event.comment.user.login }} from commit \`${{ needs.check-comment.outputs.pr_head_sha }}\`
            
            **Note:** May take 1-10 minutes to be accessible via GitHub Pages.`
          });

  handle-failure:
    needs: [check-comment, deploy-preview]
    if: failure()
    runs-on: ubuntu-latest
    
    steps:
    - name: Find initial comment
      id: find-comment
      uses: actions/github-script@v7
      with:
        script: |
          const comments = await github.rest.issues.listComments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number
          });
          
          const botComment = comments.data.find(comment => 
            comment.user.type === 'Bot' && 
            comment.body.includes('Manual PR Preview Generation Started')
          );
          
          if (botComment) {
            core.setOutput('comment_id', botComment.id);
            return botComment.id;
          }
          return null;
    
    - name: Update comment with failure
      if: steps.find-comment.outputs.comment_id
      uses: actions/github-script@v7
      with:
        script: |
          await github.rest.issues.updateComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            comment_id: ${{ steps.find-comment.outputs.comment_id }},
            body: `## Manual PR Preview Generation Failed ‚ùå
            
            **Failed to generate preview for PR #${{ needs.check-comment.outputs.pr_number }}**
            
            **Requested by:** @${{ github.event.comment.user.login }}
            **Error time:** $(date -u +'%Y-%m-%d %H:%M:%S UTC')
            
            **üîç Debug Information:**
            - [View workflow logs](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
            - Check if the PR branch builds locally with \`mkdocs serve\`
            - Verify repository permissions are configured correctly
            
            **üõ†Ô∏è Try again:**
            Comment "GitHub generate site" to retry the deployment.
            
            **üí° Alternative:**
            The automatic PR preview workflow may still work when you push new commits.`
          });
    
    - name: Create failure comment if update failed
      if: steps.find-comment.outputs.comment_id == ''
      uses: actions/github-script@v7
      with:
        script: |
          await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            body: `## Manual PR Preview Failed ‚ùå
            
            Failed to generate preview for PR #${{ needs.check-comment.outputs.pr_number }}.
            
            [View workflow logs](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}) for details.
            
            You can try commenting "GitHub generate site" again to retry.`
          }); 